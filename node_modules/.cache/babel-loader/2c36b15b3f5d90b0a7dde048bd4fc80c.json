{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    clearCacheByEndpoint,\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    clearCacheByEndpoint([\"paginatedTransactions\"]); // Bug 7 Fix\n\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return response;\n      }\n\n      return {\n        data: [...previousResponse.data, ...response.data],\n        nextPage: response.nextPage\n      }; // Bug\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"MC9laYEX8WOJmW9666KGcwcYP/k=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","clearCacheByEndpoint","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","response","page","nextPage","previousResponse","data","invalidateData"],"sources":["C:/Users/ryiij/OneDrive/Desktop/RampFE/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\r\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\r\nimport { PaginatedTransactionsResult } from \"./types\"\r\nimport { useCustomFetch } from \"./useCustomFetch\"\r\n\r\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\r\n  const { clearCacheByEndpoint, fetchWithCache, loading } = useCustomFetch()\r\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\r\n    Transaction[]\r\n  > | null>(null)\r\n\r\n  const fetchAll = useCallback(async () => {\r\n    clearCacheByEndpoint([\"paginatedTransactions\"]) // Bug 7 Fix\r\n\r\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\r\n      \"paginatedTransactions\",\r\n      {\r\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\r\n      }\r\n    )\r\n\r\n    setPaginatedTransactions((previousResponse) => {\r\n      if (response === null || previousResponse === null) {\r\n        return response\r\n      }\r\n\r\n      return { data: [...previousResponse.data, ...response.data], nextPage: response.nextPage } // Bug\r\n    })\r\n  }, [fetchWithCache, paginatedTransactions])\r\n\r\n  const invalidateData = useCallback(() => {\r\n    setPaginatedTransactions(null)\r\n  }, [])\r\n\r\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\r\n}\r\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,oBAAF;IAAwBC,cAAxB;IAAwCC;EAAxC,IAAoDJ,cAAc,EAAxE;EACA,MAAM,CAACK,qBAAD,EAAwBC,wBAAxB,IAAoDP,QAAQ,CAExD,IAFwD,CAAlE;EAIA,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,YAAY;IACvCI,oBAAoB,CAAC,CAAC,uBAAD,CAAD,CAApB,CADuC,CACS;;IAEhD,MAAMM,QAAQ,GAAG,MAAML,cAAc,CACnC,uBADmC,EAEnC;MACEM,IAAI,EAAEJ,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACK;IADnE,CAFmC,CAArC;IAOAJ,wBAAwB,CAAEK,gBAAD,IAAsB;MAC7C,IAAIH,QAAQ,KAAK,IAAb,IAAqBG,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAOH,QAAP;MACD;;MAED,OAAO;QAAEI,IAAI,EAAE,CAAC,GAAGD,gBAAgB,CAACC,IAArB,EAA2B,GAAGJ,QAAQ,CAACI,IAAvC,CAAR;QAAsDF,QAAQ,EAAEF,QAAQ,CAACE;MAAzE,CAAP,CAL6C,CAK8C;IAC5F,CANuB,CAAxB;EAOD,CAjB2B,EAiBzB,CAACP,cAAD,EAAiBE,qBAAjB,CAjByB,CAA5B;EAmBA,MAAMQ,cAAc,GAAGf,WAAW,CAAC,MAAM;IACvCQ,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEM,IAAI,EAAEP,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDM;EAAlD,CAAP;AACD;;GA9BeZ,wB;UAC4CD,c"},"metadata":{},"sourceType":"module"}